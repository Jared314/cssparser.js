{"name":"cssparser.js","tagline":"cssparser.js is a parser that generate json from css with matched orders & structures.","body":"cssparser.js\r\n========\r\n\r\ncssparser.js is a parser that generates json matched with source css structure.\r\n\r\n##Description\r\n* License: MIT license - [http://www.opensource.org/licenses/mit-license.php](http://www.opensource.org/licenses/mit-license.php)\r\n* Author : Changwook Doh - changwook.doh@gmail.com\r\n\r\n##Demo\r\n\r\n* [http://cwdoh.github.io/cssparser.js/demo/CSS_stringify.html](http://cwdoh.github.io/cssparser.js/demo/CSS_stringify.html)\r\n\r\n##Dependency\r\n\r\nJust want to use cssparser.js? Nothing needed.\r\n\r\nIf want generating parser, install 'jison' before it.\r\n\r\n* Jison - [http://jison.org](http://jison.org )\r\n\r\n\r\n##Usage\r\n\r\n###from Command-line\r\n\r\nFirst of all, you should install cssparser.\r\n\r\n\t$ npm install cssparser\r\n\t\r\n\tor\r\n\t\r\n\t$ npm install cssparser -g\r\n\r\nThen execute and you can generate JSON file from command-line.\r\n\r\n\t$ cssparser cssFile\r\n\t\r\n\tor \r\n\t\r\n\t$ cssparser cssFile -o output_file\r\n\r\n\r\n###from CommonJS Module\r\n\r\nYou can generate javascript object from your javascript module.\r\n\r\n\t// getting parser module\r\n\tvar cssparser = require(\"cssparser\");\r\n\t\r\n\t// create new instance of Parser\r\n\tvar parser = new cssparser.Parser();\r\n\t\r\n\t// parse & getting json\r\n\tvar json = parser.parse( cssText );\r\n\r\n\r\n\r\n##Generating parser from source\r\n\r\n###Getting jison & source\r\n\r\n\t$ npm install jison -g\r\n\t$ git clone https://github.com/cwdoh/cssparser.js.git\r\n\r\n###Generating from source\r\n\r\n\t$ grunt\r\n\t\r\n\tor\r\n\t\r\n\t$ jison ./src/cssparser.y ./src/css.l\r\n\r\n\r\n##JSON Structure\r\n\r\nThere's three level of JSON structure for CSS.\r\n\r\n* simple - most simple. this's simply consist of just key & value.\r\n* deep - more detailed then simple mode. this has more informations of selector, terms, expression, queries, …\r\n* atomic - most detailed. 'atomic' JSON has all pieces of each key & values in CSS. e.g. length has numeric value & its unit like \"100px\" -> { \"value\": 100, \"unit\": \"px\" }\r\n\r\n###Mode 'simple'\r\n\r\n\tstylesheet_object =\r\n\t\r\n\t\t+ charset [Object]\r\n\t\t\r\n\t\t+ imports [Array]\r\n\t\t\t+ ImportRule [Object]\r\n\t\t\t\t+ type : \"import\" : []// URI or string\r\n\t\t\t\t+ mediaquries [DOMString] : // if query exist\r\n\t\t\t\t\r\n\t\t+ namespaces [Array]\r\n\t\t\t+ namespace [DOMString] : // URI or string \r\n\t\t\t+ prefix [DOMString] : // if prefix exist\r\n\t\t\t\r\n\t\t+ rulelist [Array]\r\n\t\t\t+ [Object(Media)]\r\n\t\t\t\t+ type [DOMString] : \"media\"\r\n\t\t\t\t+ mediaqueries [DOMString] : // query string\r\n\t\t\t\t+ children [Array] : // nested rulelist\r\n\t\t\t\t\t+ rulelist // …\r\n\t\t\t\t\t\r\n\t\t\t+ [Object(FontFace)]\r\n\t\t\t\t+ type [DOMString] : \"fontface\"\r\n\t\t\t\t+ declarations [Object] : // declarations\r\n\t\t\t\r\n\t\t\t+ [Object(Page)]\r\n\t\t\t\t+ type [DOMString] : \"page\"\r\n\t\t\t\t+ id [DOMString] : // identifier\r\n\t\t\t\t+ pseudo [DOMString] : // pseudo string\r\n\t\t\t\t+ declarations [Object] : // declarations\r\n\t\t\t\r\n\t\t\t+ [Object(Style)]\r\n\t\t\t\t+ type [DOMString] : \"style\"\r\n\t\t\t\t+ selector [DOMString] : // selector string\r\n\t\t\t\t+ declarations [Object] : // declarations\r\n\t\t\t\t\r\n\t\t\t+ [Object(Keyframes)]\r\n\t\t\t\t+ type [DOMString] : \"keyframes\"\r\n\t\t\t\t+ id [DOMString] : // identifier\r\n\t\t\t\t+ prefix [DOMString] : // vendor prefix e.g. -moz-, -webkit-, -o-, …\r\n\t\t\t\t+ keyframes [Array]\r\n\t\t\t\t\t+ offset [DOMString] : // offset string\r\n\t\t\t\t\t+ declarations [Object] : // declarations\r\n\r\n###Mode 'deep'\r\n\r\nNot yet.\r\n\r\n###Mode 'atomic'\r\n\r\nNot yet.\r\n\r\n##Example\r\n\r\nfollowing is tested result with some rulesets at [http://css3please.com](http://css3please.com)\r\n\r\n\tnode cssparser ./test/sample.css -console\r\n\r\n###Input\r\n\r\n\t@charset 'utf-8';\r\n\t\r\n\t@import 'custom.css';\r\n\t@import url(\"fineprint.css\");\r\n\t@import url(\"fineprint.css\") print;\r\n\t@import url(\"bluish.css\") projection, tv;\r\n\t@import \"common.css\" screen, projection;\r\n\t@import url('landscape.css') screen and (orientation:landscape);\r\n\t\r\n\t@namespace \"http://www.w3c.org\";\r\n\t@namespace svg \"http://www.w3c.org/svg\";\r\n\t\r\n\t@media screen {\r\n\t\t* {\r\n\t\t   position: absolute;\r\n\t\t }\r\n\t\r\n\t\t.box_shadow {\r\n\t\t  -webkit-box-shadow: 0px 0px 4px 0px #ffffff; /* Android 2.3+, iOS 4.0.2-4.2, Safari 3-4 */\r\n\t\t\t\t  box-shadow: 0px 0px 4px 0px #ffffff; /* Chrome 6+, Firefox 4+, IE 9+, iOS 5+, Opera 10.50+ */\r\n\t\t}\r\n\t}\r\n\t\r\n\t@-webkit-keyframes myanim {\r\n\t  0%   { opacity: 0.0; }\r\n\t  50%  { opacity: 0.5; }\r\n\t  100% { opacity: 1.0; }\r\n\t}\r\n\t\r\n\t.matrix {\r\n\t  \r\n\t-webkit-transform: matrix(1.186,-0.069,0.102,1.036,16.595,73.291);\r\n\t-moz-transform: matrix(1.186,-0.069,0.102,1.036,16.595px,73.291px);\r\n\t-ms-transform: matrix(1.186,-0.069,0.102,1.036,16.595,73.291);\r\n\t-o-transform: matrix(1.186,-0.069,0.102,1.036,16.595,73.291);\r\n\ttransform: matrix(1.186,-0.069,0.102,1.036,16.595,73.291);\r\n\t\r\n\t}\r\n\t\r\n\t@font-face {\r\n\t  font-family: 'WebFont';\r\n\t  src: url('myfont.woff') format('woff'), /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\r\n\t       url('myfont.ttf') format('truetype'); /* Chrome 4+, Firefox 3.5, Opera 10+, Safari 3—5 */\r\n\t}\r\n\r\n###JSON Output\r\n\r\n\t{\r\n\t\t\"charset\": \"'utf-8'\",\r\n\t\t\"imports\": [\r\n\t\t\t{\r\n\t\t\t\t\"import\": \"'custom.css'\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"import\": \"url(\\\"fineprint.css\\\")\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"import\": \"url(\\\"fineprint.css\\\")\",\r\n\t\t\t\t\"mediaqueries\": \"print\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"import\": \"url(\\\"bluish.css\\\")\",\r\n\t\t\t\t\"mediaqueries\": \"projection, tv\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"import\": \"\\\"common.css\\\"\",\r\n\t\t\t\t\"mediaqueries\": \"screen, projection\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"import\": \"url('landscape.css')\",\r\n\t\t\t\t\"mediaqueries\": \"screen and (orientation:landscape)\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"namespaces\": [\r\n\t\t\t{\r\n\t\t\t\t\"namespace\": \"\\\"http://www.w3c.org\\\"\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"namespace\": \"\\\"http://www.w3c.org/svg\\\"\",\r\n\t\t\t\t\"prefix\": \"svg\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"rulelist\": [\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"media\",\r\n\t\t\t\t\"mediaqueries\": \"screen\",\r\n\t\t\t\t\"children\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"type\": \"style\",\r\n\t\t\t\t\t\t\"selector\": \"*\",\r\n\t\t\t\t\t\t\"declarations\": {\r\n\t\t\t\t\t\t\t\"position\": \"absolute\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"type\": \"style\",\r\n\t\t\t\t\t\t\"selector\": \".box_shadow\",\r\n\t\t\t\t\t\t\"declarations\": {\r\n\t\t\t\t\t\t\t\"-webkit-box-shadow\": \"0px 0px 4px 0px #ffffff\",\r\n\t\t\t\t\t\t\t\"box-shadow\": \"0px 0px 4px 0px #ffffff\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"keyframes\",\r\n\t\t\t\t\"id\": \"myanim\",\r\n\t\t\t\t\"keyframes\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"offset\": \"0%\",\r\n\t\t\t\t\t\t\"declarations\": {\r\n\t\t\t\t\t\t\t\"opacity\": \"0.0\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"offset\": \"50%\",\r\n\t\t\t\t\t\t\"declarations\": {\r\n\t\t\t\t\t\t\t\"opacity\": \"0.5\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"offset\": \"100%\",\r\n\t\t\t\t\t\t\"declarations\": {\r\n\t\t\t\t\t\t\t\"opacity\": \"1.0\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"prefix\": \"-webkit-\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"style\",\r\n\t\t\t\t\"selector\": \".matrix\",\r\n\t\t\t\t\"declarations\": {\r\n\t\t\t\t\t\"-webkit-transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595,73.291)\",\r\n\t\t\t\t\t\"-moz-transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595px,73.291px)\",\r\n\t\t\t\t\t\"-ms-transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595,73.291)\",\r\n\t\t\t\t\t\"-o-transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595,73.291)\",\r\n\t\t\t\t\t\"transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595,73.291)\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"type\": \"fontface\",\r\n\t\t\t\t\"declarations\": {\r\n\t\t\t\t\t\"font-family\": \"'WebFont'\",\r\n\t\t\t\t\t\"src\": \"url('myfont.woff') format('woff'),url('myfont.ttf') format('truetype')\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\r\n##To do list\r\n\r\n* Parsing & generating options like simple JSON expression or more detailed.\r\n* Error recovery for input css.\r\n* Utilities\r\n\t* Minify & optimize css.\r\n\t* Auto-generate Cross-browsing stylesheets.\r\n\r\n\r\n<!-- start of disqus -->\r\n<div id=\"disqus_thread\"></div>\r\n<script type=\"text/javascript\">\r\n\tvar disqus_shortname = 'cwdoh';\r\n\r\n\t(function() {\r\n\t\tvar dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;\r\n\t\tdsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';\r\n\t\t(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);\r\n\t})();\r\n</script>\r\n<noscript>Please enable JavaScript to view the <a href=\"http://disqus.com/?ref_noscript\">comments powered by Disqus.</a></noscript>\r\n<a href=\"http://disqus.com\" class=\"dsq-brlink\">comments powered by <span class=\"logo-disqus\">Disqus</span></a>\r\n<!-- end of disqus -->\r\n","google":"UA-40929587-1","note":"Don't delete this file! It's used internally to help with page regeneration."}